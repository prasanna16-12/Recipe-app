{"version":3,"sources":["Recipe.module.css","RecipeDetail.module.css","RecipeDetail.js","Recipe.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","RecipeDetail","props","recipeInfo","location","state","console","log","className","RecipeDetailStyle","recipeDetail","head","style","padding","backgroundColor","marginRight","borderRadius","headImage","src","image","alt","label","headInfo","link","href","url","smallText","source","headSubInfo","infoCard","yield","Number","calories","toFixed","tagsContainer","healthLabels","map","data","tags","body","ingredient","Heading","ingredients","lines","text","marginLeft","weight","nutrients","nutrientContainer","digest","nutrient","position","right","total","unit","Recipe","recipe","to","pathname","title","Home","useState","recipes","setRecipes","search","setSerach","query","setQuery","isRecipe","setIsRecipe","useEffect","getRecipes","a","fetch","response","json","hits","onSubmit","e","preventDefault","type","placeholder","required","value","onChange","target","index","App","Fragment","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a27a8e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"Recipe_recipe__2iEbP\",\"image\":\"Recipe_image__3KN5e\",\"title\":\"Recipe_title__zBwEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipeDetail\":\"RecipeDetail_recipeDetail__1Osxv\",\"head\":\"RecipeDetail_head__fB_nu\",\"headImage\":\"RecipeDetail_headImage__2fDOI\",\"label\":\"RecipeDetail_label__3i_nq\",\"headInfo\":\"RecipeDetail_headInfo__JO6wD\",\"link\":\"RecipeDetail_link__1hDi_\",\"smallText\":\"RecipeDetail_smallText__2w6Mn\",\"headSubInfo\":\"RecipeDetail_headSubInfo__2ubpB\",\"infoCard\":\"RecipeDetail_infoCard__QsQP6\",\"tagsContainer\":\"RecipeDetail_tagsContainer__uGjmL\",\"tags\":\"RecipeDetail_tags__LV8j-\",\"body\":\"RecipeDetail_body__1pFrg\",\"ingredient\":\"RecipeDetail_ingredient__2p6DI\",\"lines\":\"RecipeDetail_lines__1rkD-\",\"Heading\":\"RecipeDetail_Heading__3iDVq\",\"weight\":\"RecipeDetail_weight__2Ie8p\",\"nutrients\":\"RecipeDetail_nutrients__3njFH\",\"nutrientContainer\":\"RecipeDetail_nutrientContainer__1kUaK\"};","import React from 'react'\nimport RecipeDetailStyle from './RecipeDetail.module.css'\n\nconst RecipeDetail = (props) => {\n\n    const recipeInfo = props.location.state;\n    console.log(recipeInfo);\n\n    return (\n        <div className={RecipeDetailStyle.recipeDetail}>\n\n            <div className={RecipeDetailStyle.head}>\n                <div style={{ padding: '8px', backgroundColor: 'white', marginRight: '2rem', borderRadius: '1rem' }}>\n                    <img className={RecipeDetailStyle.headImage} src={recipeInfo.image} alt={recipeInfo.label}></img>\n                </div>\n                <div className={RecipeDetailStyle.headInfo}>\n                    <h1 className={RecipeDetailStyle.label}>{recipeInfo.label}</h1>\n                    <a className={RecipeDetailStyle.link} href={recipeInfo.url}><span className={RecipeDetailStyle.smallText}>source</span>{recipeInfo.source}</a>\n                    <div className={RecipeDetailStyle.headSubInfo}>\n                        <div className={RecipeDetailStyle.infoCard}>\n                            <h5>Yields</h5>\n                            <h2>{recipeInfo.yield}</h2>\n\n                        </div>\n                        <div className={RecipeDetailStyle.infoCard}>\n                            <h5>{'calories (kcal)'}</h5>\n                            <h2>{Number(recipeInfo.calories).toFixed(3)}</h2>\n\n                        </div>\n                    </div>\n                    <div className={RecipeDetailStyle.tagsContainer}>\n                        {\n                            recipeInfo.healthLabels.map((data) => {\n\n                                return (\n                                    <span className={RecipeDetailStyle.tags}>{data}</span>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n\n            </div>\n            <div className={RecipeDetailStyle.body}>\n                <div className={RecipeDetailStyle.ingredient}>\n                    <h2 className={RecipeDetailStyle.Heading}>Ingredient</h2>\n                    <ul>\n                        {\n                            recipeInfo.ingredients.map((lines) => {\n                                return (\n                                    <li className={RecipeDetailStyle.lines}>{lines.text}<span className={RecipeDetailStyle.tags} style={{marginLeft:'1rem',padding:'.1rem .5rem'}}>{Number(lines.weight).toFixed(0) + \" gm\"}</span></li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n                <div className={RecipeDetailStyle.nutrients}>\n                    <div className={RecipeDetailStyle.nutrientContainer}>\n                        {\n                            recipeInfo.digest.map((nutrient) => {\n                                return (\n                                    <span className={RecipeDetailStyle.tags} style={{ position: 'relative' }}>{nutrient.label}<span style={{ right: '0%', position: 'absolute', marginRight: '8px' }}>{Number(nutrient.total).toFixed(2) + ' ' + nutrient.unit }</span> </span>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n\n            <div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default RecipeDetail;","import React from 'react';\nimport style from './Recipe.module.css';\nimport { Link } from 'react-router-dom';\n\n\nconst Recipe = (props) => {\n    const recipe = props.props;\n\n    return (\n        <div className={style.recipe}>\n            <Link to={{\n                pathname: '/RecipeDetails/recipeInfo',\n                state: recipe\n            }}>\n                <img className={style.image} src={recipe.image} alt='imageNotAvaailablr'></img>\n                <h4 className={style.title}>{recipe.label}</h4>\n            </Link>\n        </div >\n    );\n}\n\nexport default Recipe;","\nimport React, { useState, useEffect } from 'react';\nimport Recipe from './Recipe';\nimport './Home.css';\n\nconst Home = () => {\n    const APP_ID = '542b7fc2';\n    const APP_KEY = '3acf255d91f3b5299984a64babfa7dfe';\n\n    const [recipes, setRecipes] = useState([]);\n    const [search, setSerach] = useState('');\n    const [query, setQuery] = useState('');\n    const [isRecipe ,setIsRecipe] = useState(false);\n    useEffect(() => {\n        getRecipes();\n    }, [query]);\n\n\n    const getRecipes = async () => {\n        const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=32`);\n        const data = await response.json();\n        console.log(data);\n        setRecipes(data.hits);\n    }\n\n    const updateSearch = (e) => {\n        setSerach(e.target.value);\n    }\n\n    const getSearch = (e) => {\n        e.preventDefault();\n        if (search) {\n            setQuery(search);\n            setSerach('');\n            setIsRecipe(true);\n        }else{\n            setIsRecipe(false);\n        }\n        \n    }\n\n\n    return (\n        <div className='Home'>\n            <form className='form-bar' onSubmit={getSearch}>\n                <input type='text' className='search-box' placeholder='Search recipe here...' required value={search} onChange={updateSearch}></input>\n                <button type='submit' className='search-btn'><i className=\"fas fa-search\"></i></button>\n            </form>\n            {\n                !isRecipe \n                ? \n                (<h1>Hi, find your favourite recipe...</h1>) :\n                <div></div>\n            }\n            <div className='card-containeer'>\n                \n                {recipes.map((recipe, index) => {\n                    return (\n                        <Recipe\n                            key={index}\n                            props={recipe.recipe}>\n                        </Recipe>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport RecipeDetail from './RecipeDetail';\nimport Home from './Home';\n\nconst App = () => {\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Route path='/' exact component={Home}></Route>\n        <Route path='/RecipeDetails/:obj' component={RecipeDetail}></Route>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}